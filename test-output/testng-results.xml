<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-12T14:08:18 IST" name="Cucumber Test Suite" finished-at="2025-07-12T14:08:19 IST" duration-ms="910">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Cucumber.TestNGTestRunner@4d1c005e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-07-12T14:08:18 IST" name="Register Scenario Test" finished-at="2025-07-12T14:08:19 IST" duration-ms="910">
      <class name="Cucumber.TestNGTestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Cucumber.TestNGTestRunner@4d1c005e]" started-at="2025-07-12T14:08:18 IST" name="setUpClass" finished-at="2025-07-12T14:08:19 IST" duration-ms="662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@66238be2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Cucumber.TestNGTestRunner@4d1c005e]" started-at="2025-07-12T14:08:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-07-12T14:08:19 IST" duration-ms="156" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify user is able to register with valid input"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["To register a user"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'I landed on Ecommerce page' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I landed on Ecommerce page")
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Navigate to Create an Account section")
public void navigate_to_create_an_account_section() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Input all the required field")
public void input_all_the_required_field(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("User click on Create an account button")
public void user_click_on_create_an_account_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user verify success message {string}")
public void user_verify_success_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I landed on Ecommerce page' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I landed on Ecommerce page")
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Navigate to Create an Account section")
public void navigate_to_create_an_account_section() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Input all the required field")
public void input_all_the_required_field(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("User click on Create an account button")
public void user_click_on_create_an_account_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user verify success message {string}")
public void user_verify_success_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:80)
at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Cucumber.TestNGTestRunner@4d1c005e]" started-at="2025-07-12T14:08:19 IST" name="tearDownClass" finished-at="2025-07-12T14:08:19 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Cucumber.TestNGTestRunner -->
    </test> <!-- Register Scenario Test -->
  </suite> <!-- Cucumber Test Suite -->
</testng-results>
