<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-CSOLGE9" failures="1" tests="1" name="RunCucumberTests" time="0.88" errors="0" timestamp="2025-07-12T14:02:16 IST">
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.119">
    <failure type="io.cucumber.testng.UndefinedStepException" message="The step &amp;apos;I landed on Ecommerce page&amp;apos; and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&amp;quot;I landed on Ecommerce page&amp;quot;)
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&amp;quot;Navigate to Create an Account section&amp;quot;)
public void navigate_to_create_an_account_section() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;Input all the required field&amp;quot;)
public void input_all_the_required_field(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List&amp;lt;E&amp;gt;, List&amp;lt;List&amp;lt;E&amp;gt;&amp;gt;, List&amp;lt;Map&amp;lt;K,V&amp;gt;&amp;gt;, Map&amp;lt;K,V&amp;gt; or
    // Map&amp;lt;K, List&amp;lt;V&amp;gt;&amp;gt;. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;User click on Create an account button&amp;quot;)
public void user_click_on_create_an_account_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&amp;quot;user verify success message {string}&amp;quot;)
public void user_verify_success_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I landed on Ecommerce page' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I landed on Ecommerce page")
public void i_landed_on_ecommerce_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Navigate to Create an Account section")
public void navigate_to_create_an_account_section() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Input all the required field")
public void input_all_the_required_field(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Then("User click on Create an account button")
public void user_click_on_create_an_account_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("user verify success message {string}")
public void user_verify_success_message(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 8 stack frames]]>
    </failure>
  </testcase> <!-- runScenario -->
</testsuite> <!-- RunCucumberTests -->
